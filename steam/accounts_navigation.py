# --- –í–´–ë–û–† –ò–ì–†–´ –ò –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ê–ö–ö–ê–£–ù–¢–ê–ú ---
import logging
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
import os

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DB_DIR = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'storage', 'plugins')
DB_PATH = os.path.join(DB_DIR, 'steam_rental.db')

# --- –í–´–ë–û–† –ò–ì–†–´ –ò –ù–ê–í–ò–ì–ê–¶–ò–Ø –ü–û –ê–ö–ö–ê–£–ù–¢–ê–ú ---
def games_menu():
    conn = sqlite3.connect(DB_PATH)
    c = conn.cursor()
    c.execute("SELECT DISTINCT game_name FROM accounts")
    games = [r[0] for r in c.fetchall()]
    conn.close()
    markup = InlineKeyboardMarkup()
    for game in games:
        markup.add(InlineKeyboardButton(game, callback_data=f"select_game:{game}"))
    markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu"))
    return markup

def show_accounts_page(bot, call, game, idx):
    try:
        conn = sqlite3.connect(DB_PATH)
        c = conn.cursor()
        c.execute("SELECT id, login, password, status, steam_guard_enabled FROM accounts WHERE game_name=? ORDER BY id", (game,))
        accounts = c.fetchall()
        conn.close()
        
        total = len(accounts)
        if total == 0:
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="list_accs"))
            bot.edit_message_text("–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∏–≥—Ä—ã.", call.message.chat.id, call.message.id, reply_markup=markup)
            return
            
        idx = max(0, min(idx, total-1))
        acc_id, login, password, status, steam_guard_enabled = accounts[idx]
        
        text = f"<b>–ò–≥—Ä–∞:</b> <code>{game}</code>\n<b>–õ–æ–≥–∏–Ω:</b> <code>{login}</code>\n<b>–ü–∞—Ä–æ–ª—å:</b> <code>{password}</code>\n<b>–°—Ç–∞—Ç—É—Å:</b> <b>{'üü¢ –°–≤–æ–±–æ–¥–µ–Ω' if status=='free' else 'üî¥ –í –∞—Ä–µ–Ω–¥–µ'}</b>"

        kb = InlineKeyboardMarkup()
        kb.add(InlineKeyboardButton("üß™ –¢–µ—Å—Ç", callback_data=f"test:{acc_id}"))
        kb.add(InlineKeyboardButton("‚õîÔ∏è –§—É–ª–ª –≤—ã—Ö–æ–¥", callback_data=f"logout:{acc_id}"))
        kb.add(InlineKeyboardButton("üìù –°–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", callback_data=f"chgdata:{acc_id}"))
        kb.add(InlineKeyboardButton(
            "üü¢ –ò—Å–∫–∞—Ç—å –∫–æ–¥ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞" if steam_guard_enabled else "üî¥ –ù–µ –∏—Å–∫–∞—Ç—å –∫–æ–¥ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞",
            callback_data=f"toggle_guard:{acc_id}:{game}:{idx}"
        ))

        if status == "free":
            kb.add(InlineKeyboardButton("üü¢ –ê—Ä–µ–Ω–¥–æ–≤–∞—Ç—å", callback_data=f"rent:{acc_id}"))
            kb.add(InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"del:{acc_id}"))
        else:
            kb.add(InlineKeyboardButton("‚èπ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∞—Ä–µ–Ω–¥—É", callback_data=f"return:{acc_id}"))
            kb.add(InlineKeyboardButton("üì® Steam Guard", callback_data=f"guard:{acc_id}"))

        # --- –°–¢–†–û–ö–ê –ù–ê–í–ò–ì–ê–¶–ò–ò (—Å—Ç—Ä–µ–ª–∫–∏) ---
        nav = []
        if idx > 0:
            nav.append(InlineKeyboardButton("‚¨ÖÔ∏è", callback_data=f"acc_nav:{game}:{idx-1}"))
        if idx < total-1:
            nav.append(InlineKeyboardButton("‚û°Ô∏è", callback_data=f"acc_nav:{game}:{idx+1}"))
        if nav:
            kb.row(*nav)

        # --- –ö–ù–û–ü–ö–ê "–ö –∏–≥—Ä–∞–º" –í–°–ï–ì–î–ê –í –°–ê–ú–û–ú –ù–ò–ó–£ ---
        kb.add(InlineKeyboardButton("‚¨ÖÔ∏è –ö –∏–≥—Ä–∞–º", callback_data="list_accs"))

        bot.edit_message_text(text, call.message.chat.id, call.message.id, parse_mode="HTML", reply_markup=kb)
        
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: {e}")
        bot.send_message(call.message.chat.id, f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞: {str(e)}")

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –û–ë–†–ê–ë–û–¢–ß–ò–ö–û–í ---
def init_accounts_navigation(bot):
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ acc_nav, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ñ–∞–π–ª–µ
    def cb_acc_nav(call):
        bot.answer_callback_query(call.id)
        
        # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä—Å–∏–Ω–≥ callback_data: acc_nav:<game_name>:<index>
        # –ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–æ–µ—Ç–æ—á–∏—è. –ò–Ω–¥–µ–∫—Å - –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –¥–≤–æ–µ—Ç–æ—á–∏—è.
        data_parts = call.data.split(":")
        # prefix = data_parts[0] # –ú–æ–∂–Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ
        idx_str = data_parts[-1] # –ü–æ—Å–ª–µ–¥–Ω—è—è —á–∞—Å—Ç—å - —ç—Ç–æ –∏–Ω–¥–µ–∫—Å
        game = ":".join(data_parts[1:-1]) # –í—Å–µ —á–∞—Å—Ç–∏ –º–µ–∂–¥—É –ø–µ—Ä–≤–æ–π –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–π - —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã
        
        try:
            idx = int(idx_str)
            from standalone_steam_rental_bot import show_accounts_page as show_page_main
            show_page_main(call, game, idx)
        except ValueError as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –∏–Ω–¥–µ–∫—Å–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–∑ callback: {call.data}, –æ—à–∏–±–∫–∞: {e}")
            bot.send_message(call.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º: –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã.")
        except Exception as e:
            logging.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –≤ cb_acc_nav: {e}")
            bot.send_message(call.message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º.")
    bot.callback_query_handler(func=lambda c: c.data.startswith("acc_nav:"))(cb_acc_nav)
